openapi: 3.0.3
info:
  title: Nova Payout API suite
  version: 1.0.0
tags:
  - name: Nova Payout
    description: API suite to manage payment requests and trigger them
paths:
  /payout/payment-request:
    post:
      summary: Create a new payment request in Nova
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreatePaymentRequestDto'
            examples:
              "valid payload":
                value:
                  requests:
                    - requesterAccountId: "IN123456789"
                      amount: 10.00
                      referenceId: "PAYOUT_IN_20231025_001"
                      source: "b2b_payments"
                      recipientDetails:
                        recipientName: "John Doe"
                        ifscCode: "HDFC0000123"
                        bankAccountNumber: "9876543210"
                      responseKafkaTopic: "b2b-nova-topic"
                    - requesterAccountId: "IN123456789"
                      amount: 1000.00
                      referenceId: "PAYOUT_IN_20231025_002"
                      source: "b2b_payments"
                      recipientDetails:
                        recipientName: "John Doe"
                        ifscCode: "HDFC0000123"
                        bankAccountNumber: "9876543210"
                      responseKafkaTopic: "b2b-nova-topic"
              
              "invalid payload":
                value:
                  requests:
                    - requesterAccountId: "IN123456789"
                      amount: 500.00
                      referenceId: "PAYOUT_IN_20231025_003"
                      source: "b2b_payments"
                      recipientDetails:
                        recipientName: "John Doe"
                        bankAccountNumber: "9876543210"
                      responseKafkaTopic: "b2b-nova-topic"

      responses:
        '200':
          description: "Since validation and rejections are at row level the response is always 200"
          content:
            application/json:
              examples:
                "valid payload":
                  value:
                  - referenceId: "PAYOUT_IN_20231025_001"
                    status: "success"
                    message: "Request created successfully"
                  - referenceId: "PAYOUT_IN_20231025_002"
                    status: "failed"
                    message: "Duplicate reference id"
                "invalid payload":
                  value:
                  - referenceId: "PAYOUT_IN_20231025_002"
                    status: "failed"
                    message: "Invalid request payload"
  
  /payout/cancel-payment-request:
    post:
      summary: "Cancels a payment request created in nova"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/CancelPaymentRequestDto'
            example:
              referenceIds:
              - PAYOUT_IN_20231025_001
              - PAYOUT_IN_20231025_002
              - WRONG_ID
      
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              example:
                - referenceId: PAYOUT_IN_20231025_001
                  status: 'success'
                  message: 'Payout request cancelled'
                - referenceId: PAYOUT_IN_20231025_002
                  status: 'failed'
                  message: 'Payout request is in pending state'
                - referenceId: WRONG_ID
                  status: 'failed'
                  message: 'No payout request found with reference id: WRONG_ID'


components:
  schemas:
    CreatePaymentRequestDto:
      type: object
      properties:
        requests:
          $ref: '#/components/schemas/CreatePaymentRequestItemDto'
    
    CreatePaymentRequestItemDto:
      type: object
      properties:
        requesterAccountId:
          type: string
          description: Buyer account id
        source:
          $ref: '#/components/schemas/PaymentRequestSource'
        amount:
          type: number
          format: double
          description: Amount to be payed out. Max 2 decimal points.
        referenceId:
          type: string
          description: Unique id used for de-duplicating the payment requests
        recipientDetails:
          $ref: '#/components/schemas/RecipientDetails'
        responseKafkaTopic:
          type: string
          description: Kafka topic where the status of payment request will get updated.

    RecipientDetails:
      type: object
      properties:
        recipientName:
          type: string
        ifscCode:
          type: string
        bankAccountNumber:
          type: string

    PaymentRequestSource:
      type: string
      enum:
        - b2b_payments
        - venfin
    
    CancelPaymentRequestDto:
      type: object
      properties:
        referenceIds:
          type: array
          items:
            type: string